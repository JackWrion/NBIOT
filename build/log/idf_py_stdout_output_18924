[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\workspace\uart_async_rxtxtasks\build\bootloader\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/workspace/uart_async_rxtxtasks/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_async_rxtxtasks_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable uart_async_rxtxtasks.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/workspace/uart_async_rxtxtasks/build/uart_async_rxtxtasks.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\workspace\uart_async_rxtxtasks\build\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/workspace/uart_async_rxtxtasks/build/partition_table/partition-table.bin C:/Espressif/workspace/uart_async_rxtxtasks/build/uart_async_rxtxtasks.bin"
uart_async_rxtxtasks.bin binary size 0x32190 bytes. Smallest app partition is 0x100000 bytes. 0xcde70 bytes (80%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=python;;C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/workspace/uart_async_rxtxtasks/build -P C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM12 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 uart_async_rxtxtasks.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM12
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:a7:31:e4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16451...
Writing at 0x00001000... (50 %)
Writing at 0x000076ae... (100 %)
Wrote 26384 bytes (16451 compressed) at 0x00001000 in 0.8 seconds (effective 248.6 kbit/s)...
Hash of data verified.
Compressed 205200 bytes to 108595...
Writing at 0x00010000... (14 %)
Writing at 0x0001c9c2... (28 %)
Writing at 0x00022211... (42 %)
Writing at 0x000280cf... (57 %)
Writing at 0x0002e52b... (71 %)
Writing at 0x00038aec... (85 %)
Writing at 0x0003e524... (100 %)
Wrote 205200 bytes (108595 compressed) at 0x00010000 in 2.6 seconds (effective 636.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 337.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
